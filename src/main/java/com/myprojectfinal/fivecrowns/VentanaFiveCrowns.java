/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.myprojectfinal.fivecrowns;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JTextField;

/**
 *
 * @author JesusOmar Leal
 */
public class VentanaFiveCrowns extends javax.swing.JFrame {

    /**
     * Creates new form VentanaFiveCrowns
     */
    Mano mano;
    Mano mano2 = new Mano(5);
    Pila<Carta> barajaAux = new Pila<>();

    public VentanaFiveCrowns() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonGenerarMano = new javax.swing.JButton();
        TituloVentana = new javax.swing.JLabel();
        BarajaPrincipalTEXT = new javax.swing.JLabel();
        BarajaAuxiliarTEXT = new javax.swing.JLabel();
        botonReiniciarMano = new javax.swing.JButton();
        PaloCartaTEXT = new javax.swing.JLabel();
        NumeroTEXT = new javax.swing.JLabel();
        cartaBarajaOriginal1 = new javax.swing.JTextField();
        cartaBarajaOriginal2 = new javax.swing.JTextField();
        cartaBarajaOriginal3 = new javax.swing.JTextField();
        cartaBarajaOriginal4 = new javax.swing.JTextField();
        cartaBarajaOriginal5 = new javax.swing.JTextField();
        cartaBarajaOriginal6 = new javax.swing.JTextField();
        cartaBarajaOriginal8 = new javax.swing.JTextField();
        cartaBarajaOriginal7 = new javax.swing.JTextField();
        cartaBarajaOriginal9 = new javax.swing.JTextField();
        cartaBarajaOriginal10 = new javax.swing.JTextField();
        cartaBarajaAux1 = new javax.swing.JTextField();
        cartaBarajaAux2 = new javax.swing.JTextField();
        cartaBarajaAux3 = new javax.swing.JTextField();
        cartaBarajaAux4 = new javax.swing.JTextField();
        cartaBarajaAux5 = new javax.swing.JTextField();
        cartaBarajaAux6 = new javax.swing.JTextField();
        cartaBarajaAux7 = new javax.swing.JTextField();
        cartaBarajaAux8 = new javax.swing.JTextField();
        cartaBarajaAux9 = new javax.swing.JTextField();
        cartaBarajaAux10 = new javax.swing.JTextField();
        filtrarTrebol = new javax.swing.JButton();
        filtrarPicas = new javax.swing.JButton();
        filtrarDiamante = new javax.swing.JButton();
        filtrarCorazon = new javax.swing.JButton();
        filtrarJoker = new javax.swing.JButton();
        filtrarEstrella = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b10 = new javax.swing.JButton();
        b11 = new javax.swing.JButton();
        b12 = new javax.swing.JButton();
        b13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        botonGenerarMano.setText("Generar Cartas");
        botonGenerarMano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarManoActionPerformed(evt);
            }
        });

        TituloVentana.setBackground(new java.awt.Color(255, 255, 255));
        TituloVentana.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        TituloVentana.setText("Five Crowns");

        BarajaPrincipalTEXT.setText("Baraja Principal");

        BarajaAuxiliarTEXT.setText("Baraja Auxiliar");

        botonReiniciarMano.setText("Reestablecer");
        botonReiniciarMano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarManoActionPerformed(evt);
            }
        });

        PaloCartaTEXT.setText("Palo Carta");

        NumeroTEXT.setText("Numero");

        cartaBarajaOriginal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaBarajaOriginal2ActionPerformed(evt);
            }
        });

        cartaBarajaOriginal3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaBarajaOriginal3ActionPerformed(evt);
            }
        });

        cartaBarajaAux2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaBarajaAux2ActionPerformed(evt);
            }
        });

        cartaBarajaAux3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaBarajaAux3ActionPerformed(evt);
            }
        });

        cartaBarajaAux6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaBarajaAux6ActionPerformed(evt);
            }
        });

        cartaBarajaAux8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartaBarajaAux8ActionPerformed(evt);
            }
        });

        filtrarTrebol.setText("Trebol");
        filtrarTrebol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarTrebolActionPerformed(evt);
            }
        });

        filtrarPicas.setText("Picas");
        filtrarPicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarPicasActionPerformed(evt);
            }
        });

        filtrarDiamante.setText("Diamante");
        filtrarDiamante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarDiamanteActionPerformed(evt);
            }
        });

        filtrarCorazon.setText("Corazon");
        filtrarCorazon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarCorazonActionPerformed(evt);
            }
        });

        filtrarJoker.setText("Joker");
        filtrarJoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarJokerActionPerformed(evt);
            }
        });

        filtrarEstrella.setText("Estrella");
        filtrarEstrella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarEstrellaActionPerformed(evt);
            }
        });

        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        b10.setText("10");
        b10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b10ActionPerformed(evt);
            }
        });

        b11.setText("J");
        b11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b11ActionPerformed(evt);
            }
        });

        b12.setText("Q");
        b12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b12ActionPerformed(evt);
            }
        });

        b13.setText("K");
        b13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cartaBarajaAux1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cartaBarajaAux2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cartaBarajaAux6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cartaBarajaAux7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(BarajaAuxiliarTEXT))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cartaBarajaAux3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cartaBarajaAux4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cartaBarajaAux5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cartaBarajaAux8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cartaBarajaAux9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cartaBarajaAux10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cartaBarajaOriginal1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cartaBarajaOriginal2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cartaBarajaOriginal6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cartaBarajaOriginal7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cartaBarajaOriginal8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cartaBarajaOriginal9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cartaBarajaOriginal10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cartaBarajaOriginal3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cartaBarajaOriginal4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cartaBarajaOriginal5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(BarajaPrincipalTEXT))
                                .addGap(82, 82, 82)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonGenerarMano)
                                .addGap(18, 18, 18)
                                .addComponent(botonReiniciarMano, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(NumeroTEXT)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(b13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(b10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(b11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(b12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(PaloCartaTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(filtrarTrebol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filtrarPicas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filtrarDiamante, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(filtrarEstrella, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filtrarCorazon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(filtrarJoker, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(297, 297, 297)
                        .addComponent(TituloVentana)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(BarajaPrincipalTEXT)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TituloVentana, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cartaBarajaOriginal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaOriginal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaOriginal4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaOriginal5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaOriginal3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cartaBarajaOriginal8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cartaBarajaOriginal6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cartaBarajaOriginal7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cartaBarajaOriginal9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cartaBarajaOriginal10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cartaBarajaAux2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cartaBarajaAux6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartaBarajaAux10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonReiniciarMano)
                            .addComponent(botonGenerarMano))
                        .addGap(18, 18, 18)
                        .addComponent(PaloCartaTEXT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filtrarTrebol)
                            .addComponent(filtrarCorazon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filtrarPicas)
                            .addComponent(filtrarEstrella))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filtrarDiamante)
                            .addComponent(filtrarJoker)
                            .addComponent(BarajaAuxiliarTEXT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NumeroTEXT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b3)
                            .addComponent(b4)
                            .addComponent(b5)
                            .addComponent(b6)
                            .addComponent(b7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b8)
                            .addComponent(b9)
                            .addComponent(b10)
                            .addComponent(b11)
                            .addComponent(b12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b13)
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonGenerarManoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarManoActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        this.mano = new Mano(10);
        mano2.crearCopia(mano.getBaraja());
        barajaAux.clear();

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        // System.out.println("" + contenidoMano);
        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

    }//GEN-LAST:event_botonGenerarManoActionPerformed
    private JTextField getCartaBarajaOriginalLabel(int numero) {
        switch (numero) {
            case 1:
                return cartaBarajaOriginal1;
            case 2:
                return cartaBarajaOriginal2;
            case 3:
                return cartaBarajaOriginal3;
            case 4:
                return cartaBarajaOriginal4;
            case 5:
                return cartaBarajaOriginal5;
            case 6:
                return cartaBarajaOriginal6;
            case 7:
                return cartaBarajaOriginal7;
            case 8:
                return cartaBarajaOriginal8;
            case 9:
                return cartaBarajaOriginal9;
            case 10:
                return cartaBarajaOriginal10;
            default:
                throw new IllegalArgumentException("Número de carta no válido: " + numero);
        }
    }

    private JTextField getCartaBarajaAuxLabel(int numero) {
        switch (numero) {
            case 1:
                return cartaBarajaAux1;
            case 2:
                return cartaBarajaAux2;
            case 3:
                return cartaBarajaAux3;
            case 4:
                return cartaBarajaAux4;
            case 5:
                return cartaBarajaAux5;
            case 6:
                return cartaBarajaAux6;
            case 7:
                return cartaBarajaAux7;
            case 8:
                return cartaBarajaAux8;
            case 9:
                return cartaBarajaAux9;
            case 10:
                return cartaBarajaAux10;
            default:
                throw new IllegalArgumentException("Número de carta no válido: " + numero);
        }
    }
    private void botonReiniciarManoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarManoActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        barajaAux.clear();

        mano.crearCopia(mano2.getBaraja());
        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);
        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_botonReiniciarManoActionPerformed

    private void cartaBarajaOriginal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaBarajaOriginal2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartaBarajaOriginal2ActionPerformed

    private void cartaBarajaOriginal3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaBarajaOriginal3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartaBarajaOriginal3ActionPerformed

    private void cartaBarajaAux2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaBarajaAux2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartaBarajaAux2ActionPerformed

    private void cartaBarajaAux3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaBarajaAux3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartaBarajaAux3ActionPerformed

    private void cartaBarajaAux6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaBarajaAux6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartaBarajaAux6ActionPerformed

    private void cartaBarajaAux8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartaBarajaAux8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cartaBarajaAux8ActionPerformed

    private void filtrarPicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarPicasActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {

            mano.filtrarPorPalo(2, barajaAux);

        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_filtrarPicasActionPerformed

    private void filtrarDiamanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarDiamanteActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {

            mano.filtrarPorPalo(3, barajaAux);

        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_filtrarDiamanteActionPerformed

    private void filtrarCorazonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarCorazonActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {

            mano.filtrarPorPalo(4, barajaAux);

        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_filtrarCorazonActionPerformed

    private void filtrarJokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarJokerActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {

            mano.filtrarPorPalo(6, barajaAux);

        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_filtrarJokerActionPerformed

    private void filtrarEstrellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarEstrellaActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {

            mano.filtrarPorPalo(5, barajaAux);

        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_filtrarEstrellaActionPerformed

    private void filtrarTrebolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarTrebolActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {

            mano.filtrarPorPalo(1, barajaAux);

        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        //  System.out.println("" + contenidoMano);
        //  System.out.println("" + barajaAux);
        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_filtrarTrebolActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("3", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("4", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("5", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("6", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("7", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("8", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("9", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b9ActionPerformed

    private void b10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b10ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("10", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b10ActionPerformed

    private void b11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b11ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("J", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b11ActionPerformed

    private void b12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b12ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("Q", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b12ActionPerformed

    private void b13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b13ActionPerformed
        ArrayList<Carta> contenidoMano = new ArrayList<>();
        ArrayList<Carta> contenidoAux = new ArrayList<>();

        if (!mano.getBaraja().estaVacia()) {
            mano.filtrarPorNumero("K", barajaAux);
        } else {

            System.out.println("Ya no hay cartas");

        }

        contenidoMano = mano.extraerPila(mano.getBaraja());
        contenidoAux = mano.extraerPila(barajaAux);

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaOriginalLabel(i + 1);
            if (i < contenidoMano.size()) {
                Carta carta = contenidoMano.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }

        for (int i = 0; i < 10; i++) {
            JTextField cartaLabel = getCartaBarajaAuxLabel(i + 1);
            if (i < contenidoAux.size()) {
                Carta carta = contenidoAux.get(i);
                cartaLabel.setBackground(carta.obtenerColor(carta.getColor()));
                cartaLabel.setText(carta.toString());
            } else {
                cartaLabel.setBackground(null);
                cartaLabel.setText("");
            }
        }
    }//GEN-LAST:event_b13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaFiveCrowns.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaFiveCrowns.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaFiveCrowns.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaFiveCrowns.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaFiveCrowns().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BarajaAuxiliarTEXT;
    private javax.swing.JLabel BarajaPrincipalTEXT;
    private javax.swing.JLabel NumeroTEXT;
    private javax.swing.JLabel PaloCartaTEXT;
    private javax.swing.JLabel TituloVentana;
    private javax.swing.JButton b10;
    private javax.swing.JButton b11;
    private javax.swing.JButton b12;
    private javax.swing.JButton b13;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton botonGenerarMano;
    private javax.swing.JButton botonReiniciarMano;
    private javax.swing.JTextField cartaBarajaAux1;
    private javax.swing.JTextField cartaBarajaAux10;
    private javax.swing.JTextField cartaBarajaAux2;
    private javax.swing.JTextField cartaBarajaAux3;
    private javax.swing.JTextField cartaBarajaAux4;
    private javax.swing.JTextField cartaBarajaAux5;
    private javax.swing.JTextField cartaBarajaAux6;
    private javax.swing.JTextField cartaBarajaAux7;
    private javax.swing.JTextField cartaBarajaAux8;
    private javax.swing.JTextField cartaBarajaAux9;
    private javax.swing.JTextField cartaBarajaOriginal1;
    private javax.swing.JTextField cartaBarajaOriginal10;
    private javax.swing.JTextField cartaBarajaOriginal2;
    private javax.swing.JTextField cartaBarajaOriginal3;
    private javax.swing.JTextField cartaBarajaOriginal4;
    private javax.swing.JTextField cartaBarajaOriginal5;
    private javax.swing.JTextField cartaBarajaOriginal6;
    private javax.swing.JTextField cartaBarajaOriginal7;
    private javax.swing.JTextField cartaBarajaOriginal8;
    private javax.swing.JTextField cartaBarajaOriginal9;
    private javax.swing.JButton filtrarCorazon;
    private javax.swing.JButton filtrarDiamante;
    private javax.swing.JButton filtrarEstrella;
    private javax.swing.JButton filtrarJoker;
    private javax.swing.JButton filtrarPicas;
    private javax.swing.JButton filtrarTrebol;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
